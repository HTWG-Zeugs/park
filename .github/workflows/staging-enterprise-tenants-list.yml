name: Manage tenant

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'add or remove'
        required: true
      tenant_id:
        required: true
      tenant_subdomain:
        default: ""
      
permissions:
  id-token: write 
  contents: read 
  
env:
  GCR_REPO: "${{ vars.STAGING_REGION }}-docker.pkg.dev/${{ vars.STAGING_PROJECT_ID }}/docker-repository"
  CLUSTER: "${{ vars.STAGING_PROJECT_ID }}-gke"

jobs:
  manage-tenant:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: 'github-sa@${{ vars.PRODUCTION_PROJECT_ID }}.iam.gserviceaccount.com'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r ci-cd/requirements.txt

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - uses: hashicorp/setup-terraform@v3
      - name: Run deploy script
        working-directory: ./ci-cd
        run: |
          python -u manage_enterprise_tenants.py \
          --action ${{ inputs.action }} \
          --gcs-bucket ${{ vars.STAGING_STATE_BUCKET }} \
          --tenant-id ${{ inputs.tenant_id }} \
          --tenant-subdomain ${{ inputs.tenant_subdomain }}
    
  sync-terraform:
    runs-on: ubuntu-latest
    needs: manage-tenant
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: 'github-sa@${{ vars.PRODUCTION_PROJECT_ID }}.iam.gserviceaccount.com'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r ci-cd/requirements.txt

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - uses: hashicorp/setup-terraform@v3
      - name: Run terraform apply
        working-directory: ./ci-cd
        run: |
          python -u deploy-terraform.py \
          --action apply \
          --is-github-actions \
          --create-cluster \
          --project-id ${{ vars.STAGING_PROJECT_ID }} \
          --gcs-bucket ${{ vars.STAGING_STATE_BUCKET }} \
          --domain-name ${{ vars.STAGING_DOMAIN }} \
          --region ${{ vars.STAGING_REGION }} \
          --environment staging

  sync-services:
    runs-on: ubuntu-latest
    needs: sync-terraform
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE_AUDIENCE: "infrastructure-administration-service"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: 'github-sa@${{ vars.PRODUCTION_PROJECT_ID }}.iam.gserviceaccount.com'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ vars.STAGING_REGION }}
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r ci-cd/requirements.txt

      - name: Sync helm deployments
        working-directory: ./ci-cd
        run: |
          python -u deploy-kubernetes.py \
          --is-github-actions \
          --project-id ${{ vars.STAGING_PROJECT_ID }} \
          --gcs-bucket ${{ vars.STAGING_STATE_BUCKET }} \
          --repository ${{ env.GCR_REPO }} \
          --identity-api-key ${{ secrets.STAGING_IDENTITY_PLATFORM_API_KEY }}  \
          --identity-auth-domain ${{ vars.STAGING_IDENTITY_PLATFORM_AUTH_DOMAIN }} \
          --infra-url https://infrastructure-administration-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.STAGING_REGION }}.run.app \
          --auth-url https://authentication-service-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.STAGING_REGION }}.run.app \
          --domain ${{ vars.STAGING_DOMAIN }} \
          --region ${{ vars.STAGING_REGION }}