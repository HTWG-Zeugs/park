name: Staging CI/CD

on:
  push:
    branches:
      - dev

permissions:
  id-token: write 
  contents: read 

env:
  TAG_ID: "${{ github.sha }}"
  GCR_REPO: "${{ vars.REGION }}-docker.pkg.dev/${{ vars.STAGING_PROJECT_ID }}/${{ vars.STAGING_ARTIFACT_REPO }}"
  CLUSTER: "${{ vars.STAGING_PROJECT_ID }}-gke"
  DOMAIN: ${{ vars.STAGING_DOMAIN }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: "property-management", dockerfile: "./property-management.Dockerfile" }
          - { name: "parking-management", dockerfile: "./parking-management.Dockerfile" }
          - { name: "authentication-service", dockerfile: "./authentication-service.Dockerfile" }
          - { name: "infrastructure-administration", dockerfile: "./infrastructure-administration.Dockerfile" }
          - { name: "frontend", dockerfile: "./frontend.Dockerfile" }
          - { name: "signup-frontend", dockerfile: "./signup-frontend.Dockerfile" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ secrets.STAGING_GITHUB_SA }}'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            -f ${{ matrix.service.dockerfile }} \
            . \
            -t ${{ matrix.service.name }}:${{ env.TAG_ID }} \
            --no-cache \
            --platform linux/amd64

      - name: Tag Docker image
        run: |
          docker tag ${{ matrix.service.name }}:${{ env.TAG_ID }} ${{ env.GCR_REPO }}/${{ matrix.service.name }}:${{ env.TAG_ID }}

      - name: Push Docker image to GCR
        run: |
          docker push ${{ env.GCR_REPO }}/${{ matrix.service.name }}:${{ env.TAG_ID }}

  sync-terraform:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ secrets.STAGING_GITHUB_SA }}'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r ci-cd/requirements.txt

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - uses: hashicorp/setup-terraform@v3
      - name: Run terraform apply
        working-directory: ./ci-cd
        run: |
          python -u deploy-terraform.py \
          --action apply \
          --is-github-actions \
          --create-cluster \
          --project-id ${{ vars.STAGING_PROJECT_ID }} \
          --gcs-bucket ${{ vars.STAGING_STATE_BUCKET }} \
          --domain-name ${{ env.DOMAIN }} \
          --region ${{ vars.REGION }} \
          --environment staging

  sync-services:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      INFRA_SERVICE_ACCOUNT: infra-sa@${{ vars.STAGING_PROJECT_ID }}.iam.gserviceaccount.com
      INFRA_DB_ID: "${{ vars.STAGING_PROJECT_ID }}-infra-management"
      AUTH_SERVICE_ACCOUNT: auth-sa@${{ vars.STAGING_PROJECT_ID }}.iam.gserviceaccount.com
      AUTH_DB_ID: "${{ vars.STAGING_PROJECT_ID }}-auth"
      SERVICE_AUDIENCE: "infrastructure-administration-service"
      SIGNUP_FRONTEND_SERVICE_ACCOUNT: sign-up-frontend-sa@${{ vars.STAGING_PROJECT_ID }}.iam.gserviceaccount.com
    needs: 
      - build-and-push-images
      - sync-terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ secrets.STAGING_GITHUB_SA }}'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ vars.REGION }}
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r ci-cd/requirements.txt

      - name: Deploy infrastructure-administration service to Cloud Run
        run: |
          gcloud run deploy infrastructure-administration \
            --image=${{ env.GCR_REPO }}/infrastructure-administration:${{env.TAG_ID}} \
            --platform=managed \
            --region=${{ vars.REGION }} \
            --allow-unauthenticated \
            --port=8083 \
            --service-account=${{ env.INFRA_SERVICE_ACCOUNT }} \
            --set-env-vars "AUTHENTICATION_SERVICE_URL=https://authentication-service-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.REGION }}.run.app" \
            --set-env-vars "ANALYTICS_DB_ID=${{ env.INFRA_DB_ID }}" \
            --set-env-vars "INFRASTRUCTURE_ADMINISTRATION_SERVICE_AUDIENCE=${{ env.SERVICE_AUDIENCE }}" \
            --set-env-vars "GITHUB_ACTION_TOKEN=${{ secrets.CD_TOKEN }}" \
            --set-env-vars "GITHUB_TENANT_WORKFLOW_ID=staging-manage-enterprise-tenants.yml" \
            --set-env-vars "GITHUB_TENANT_WORKFLOW_BRANCH=dev" \
            --set-custom-audiences "[ ${{ env.SERVICE_AUDIENCE }} ]"

      - name: Deploy authentication-service to Cloud Run
        run: |
          gcloud run deploy authentication-service \
            --image=${{ env.GCR_REPO }}/authentication-service:${{env.TAG_ID}} \
            --platform=managed \
            --region=${{ vars.REGION }} \
            --allow-unauthenticated \
            --port=8082 \
            --service-account=${{ env.AUTH_SERVICE_ACCOUNT }} \
            --set-env-vars "FIRESTORE_DB_ID=${{ env.AUTH_DB_ID }}" \
            --set-env-vars "IDENTITY_PLATFORM_API_KEY=${{ secrets.STAGING_IDENTITY_PLATFORM_API_KEY }}" \
            --set-env-vars "IDENTITY_PLATFORM_AUTH_DOMAIN=${{ vars.STAGING_IDENTITY_PLATFORM_AUTH_DOMAIN }}" \
            --set-env-vars "PARK_IDENTITY_PLATFORM_PROJECT_ID=${{ vars.STAGING_PROJECT_ID }}" \
            --set-env-vars "INFRASTRUCTURE_SERVICE_URL=https://infrastructure-administration-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.REGION }}.run.app" \
            --set-env-vars "INFRASTRUCTURE_ADMINISTRATION_SERVICE_AUDIENCE=${{ env.SERVICE_AUDIENCE }}" \
            --set-custom-audiences "[ ${{ env.SERVICE_AUDIENCE }} ]"

      - name: Deploy signup frontend
        run: |
          gcloud run deploy signup-frontend \
            --image=${{ env.GCR_REPO }}/signup-frontend:${{env.TAG_ID}} \
            --platform=managed \
            --region=${{ vars.REGION }} \
            --allow-unauthenticated \
            --port=80 \
            --service-account=${{ env.SIGNUP_FRONTEND_SERVICE_ACCOUNT }} \
            --set-env-vars "PARK_AUTHENTICATION_URL=https://authentication-service-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.REGION }}.run.app"

      - name: Sync helm deployments
        working-directory: ./ci-cd
        run: |
          python -u deploy-kubernetes.py \
          --is-github-actions \
          --project-id ${{ vars.STAGING_PROJECT_ID }} \
          --gcs-bucket ${{ vars.STAGING_STATE_BUCKET }} \
          --repository ${{ env.GCR_REPO }} \
          --identity-api-key ${{ secrets.STAGING_IDENTITY_PLATFORM_API_KEY }}  \
          --identity-auth-domain ${{ vars.STAGING_IDENTITY_PLATFORM_AUTH_DOMAIN }} \
          --infra-url https://infrastructure-administration-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.REGION }}.run.app \
          --auth-url https://authentication-service-${{ vars.STAGING_PROJECT_NUMBER }}.${{ vars.REGION }}.run.app \
          --domain ${{ env.DOMAIN }} \
          --git-tag ${{ env.TAG_ID}} \
          --region ${{ vars.REGION }}