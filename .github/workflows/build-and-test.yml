name: Build and Test

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - { name: "property-management", dockerfile: "./property-management.Dockerfile" }
          - { name: "parking-management", dockerfile: "./parking-management.Dockerfile" }
          - { name: "authentication-service", dockerfile: "./authentication-service.Dockerfile" }
          - { name: "frontend", dockerfile: "./frontend.Dockerfile" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build \
            -f ${{ matrix.service.dockerfile }} \
            . \
            --platform linux/amd64

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [
          backend/property-management,
          backend/parking-management,
          backend/authentication,
          frontend
        ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        cd ${{ matrix.service }}
        npm ci

    - name: Run tests
      run: |
        cd ${{ matrix.service }}
        npm test --if-present

  plan-terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ secrets.STAGING_GITHUB_SA }}'
          workload_identity_provider: '${{ secrets.STAGING_WORKLOAD_IDENTITY_PROVIDER }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: |
          cd terraform/staging
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/staging
          terraform plan